a = group_by(shots_data,name)
count(a,sort = TRUE)
summarise(group_by(shots_data,name),total = count(shot_made_flag),made = count(shot_made_flag=="shot_yes"))
library(dplyr)
a = group_by(shots_data,name)
count(a,sort = TRUE)
summarise(a,total = count(shot_made_flag),made = count(shot_made_flag=="shot_yes"))
library(dplyr)
a = group_by(shots_data,name)
count(a,sort = TRUE)
summarise(a,total = sum(shot_made_flag),made = count(shot_made_flag=="shot_yes"))
library(dplyr)
a = group_by(shots_data,name)
count(a,sort = TRUE)
summarise(a,total = n(shot_made_flag),made = n(shot_made_flag=="shot_yes"))
library(dplyr)
a = group_by(shots_data,name)
count(a,sort = TRUE)
summarise(a,total = n(),made = n(shot_made_flag=="shot_yes"))
library(dplyr)
a = group_by(shots_data,name)
count(a,sort = TRUE)
summarise(a,total = n(),made = all(shot_made_flag=="shot_yes"))
library(dplyr)
a = group_by(shots_data,name)
table(a$name)
count(a,sort = TRUE)
summarise(a,total = n(),made = all(shot_made_flag=="shot_yes"))
library(dplyr)
a = group_by(shots_data,name)
table(a$name)
library(dplyr)
overall = group_by(shots_data,name)
table(a$name)
sum(overall$shot_made_flag == "shot_yes")
library(dplyr)
overall = group_by(shots_data,name)
table(a$name)
group_by(shots_data=="shot_yes",name)
?group_by
library(dplyr)
overall = group_by(shots_data,name)
table(a$name)
a$shot_made_flag=="shot_yes"
library(dplyr)
overall = group_by(shots_data,name)
table(a$name)
table(a$shot_made_flag=="shot_yes")
library(dplyr)
overall = group_by(shots_data,name)
table(a$name)
table(a[a$shot_made_flag=="shot_yes",])
library(dplyr)
overall = group_by(shots_data,name)
table(a$name)
a[a$shot_made_flag=="shot_yes",]
library(dplyr)
overall = group_by(shots_data,name)
table(overall$name)
overall[overall$shot_made_flag=="shot_yes",]
library(dplyr)
overall = group_by(shots_data,name)
table(overall$name)
overall2 = overall[overall$shot_made_flag=="shot_yes",]
View(overall2)
View(overall2)
library(dplyr)
table(shots_data$name)
a1 = shots_data[shots_data$shot_made_flag=="shot_yes",]
table(a1$name)
library(dplyr)
total = table(shots_data$name)
a1 = shots_data[shots_data$shot_made_flag=="shot_yes",]
made = table(a1$name)
cbind(total,made)
library(dplyr)
total = table(shots_data$name)
a1 = shots_data[shots_data$shot_made_flag=="shot_yes",]
made = table(a1$name)
overall = cbind(total,made)
overall <- mutate(overall,perc_made = made/total)
View(overall)
library(dplyr)
shots_data %>%
group_by(name) %>%
summarise(total = n(),
made = sum(shot_made_flag=="shot_yes")) %>%
mutate(perc_made = made/total)
View(shots_data)
View(shots_data)
shots_data[shots_data$shot_type=="2PT Field Goal",] %>%
group_by(name) %>%
summarise(total = n(),
made = sum(shot_made_flag=="shot_yes")) %>%
mutate(perc_made = made/total)
shots_data %>%
group_by(name) %>%
summarise(total = n(),
made = sum(shot_made_flag=="shot_yes")) %>%
mutate(perc_made = made/total) %>%
arrange(perc_made)
?arrange
shots_data %>%
group_by(name) %>%
summarise(total = n(),
made = sum(shot_made_flag=="shot_yes")) %>%
mutate(perc_made = made/total) %>%
arrange(desc(perc_made))
library(dplyr)
# 2PT Effective Shooting % by Player:
shots_data[shots_data$shot_type=="2PT Field Goal",] %>%
group_by(name) %>%
summarise(total = n(),
made = sum(shot_made_flag=="shot_yes")) %>%
mutate(perc_made = made/total) %>%
arrange(desc(perc_made))
# 3PT Effective Shooting % by Player:
shots_data[shots_data$shot_type=="3PT Field Goal",] %>%
group_by(name) %>%
summarise(total = n(),
made = sum(shot_made_flag=="shot_yes")) %>%
mutate(perc_made = made/total) %>%
arrange(desc(perc_made))
# Effective Shooting % by Player:
shots_data %>%
group_by(name) %>%
summarise(total = n(),
made = sum(shot_made_flag=="shot_yes")) %>%
mutate(perc_made = made/total) %>%
arrange(desc(perc_made))
getwd()
library(dplyr)
shots_data <- read.csv("data/shots-data.csv", stringsAsFactors = FALSE)
library(dplyr)
shots_data <- read.csv("../data/shots-data.csv", stringsAsFactors = FALSE)
# 2PT Effective Shooting % by Player:
shots_data[shots_data$shot_type=="2PT Field Goal",] %>%
group_by(name) %>%
summarise(total = n(),
made = sum(shot_made_flag=="shot_yes")) %>%
mutate(perc_made = made/total) %>%
arrange(desc(perc_made))
library(dplyr)
shots_data <- read.csv("../data/shots-data.csv")
# 2PT Effective Shooting % by Player:
shots_data[shots_data$shot_type=="2PT Field Goal",] %>%
group_by(name) %>%
summarise(total = n(),
made = sum(shot_made_flag=="shot_yes")) %>%
mutate(perc_made = made/total) %>%
arrange(desc(perc_made))
library(dplyr)
shots_data <- read_csv("../data/shots-data.csv")
library(dplyr)
library(readr)
shots_data <- read_csv("../data/shots-data.csv")
# 2PT Effective Shooting % by Player:
shots_data[shots_data$shot_type=="2PT Field Goal",] %>%
group_by(name) %>%
summarise(total = n(),
made = sum(shot_made_flag=="shot_yes")) %>%
mutate(perc_made = made/total) %>%
arrange(desc(perc_made))
View(shots_data)
View(shots_data)
library(dplyr)
shots_data <- read.csv("../data/shots-data.csv")
# 2PT Effective Shooting % by Player:
shots_data[shots_data$shot_type=="2PT Field Goal",] %>%
group_by(name) %>%
summarise(total = n(),
made = sum(shot_made_flag=="shot_yes")) %>%
mutate(perc_made = made/total) %>%
arrange(desc(perc_made))
View(shots_data)
################################
## title: make shots data
## description: use five data sets to make shots data
## inputs: andre-iguodala.csv,draymond-green.csv,kevin-durant.csv,klay-thompson.csvstephen-curry.csv
## outputs: andre-iguodala-summary.txt,draymond-green-summary.txt,kevin-durant-summary.txt,klay-thompson-summary.txt,stephen-curry-summary.txt,shots-data.csv,shots-data-summary.txt
################################
setwd("~/Desktop/STAT133CompWithData/workout/workout01/")
# Read in the five data sets, using relative file paths; the decision of
#the data types for each column is up to you.
ai <- read.csv("data/andre-iguodala.csv", stringsAsFactors = FALSE)
dg <- read.csv("data/draymond-green.csv", stringsAsFactors = FALSE)
kd <- read.csv("data/kevin-durant.csv", stringsAsFactors = FALSE)
kt <- read.csv("data/klay-thompson.csv", stringsAsFactors = FALSE)
sc <- read.csv("data/stephen-curry.csv", stringsAsFactors = FALSE)
# Add a column name to each imported data frame, that contains the name of
#the corresponding player
ai['name'] = 'Andre Iguodala'
dg['name'] = 'Draymond Green'
kd['name'] = 'Kevin Durant'
kt['name'] = 'Klay Thompson'
sc['name'] = 'Stephen Curry'
# Change the original values of shot_made_flag to more descriptive values:
#replace "n" with "shot_no", and "y" with "shot_yes". Hint: you can use
#logical subsetting for this operation (no need to use programming structures
#that we haven’t covered yet).
ai$shot_made_flag[ai$shot_made_flag == "n"] = "shot_no"
ai$shot_made_flag[ai$shot_made_flag == "y"] = "shot_yes"
dg$shot_made_flag[dg$shot_made_flag == "n"] = "shot_no"
dg$shot_made_flag[dg$shot_made_flag == "y"] = "shot_yes"
kd$shot_made_flag[kd$shot_made_flag == "n"] = "shot_no"
kd$shot_made_flag[kd$shot_made_flag == "y"] = "shot_yes"
kt$shot_made_flag[kt$shot_made_flag == "n"] = "shot_no"
kt$shot_made_flag[kt$shot_made_flag == "y"] = "shot_yes"
sc$shot_made_flag[sc$shot_made_flag == "n"] = "shot_no"
sc$shot_made_flag[sc$shot_made_flag == "y"] = "shot_yes"
# Add a column minute that contains the minute number where a shot occurred. For instance, if
#a shot took place during period = 1 and minutes_remaining = 8, then this should correspond to
#a value minute = 4. Likewise, if a shot took place during period = 4 and minutes_remaining = 2
#then this should correspond to a value minute = 46. Hint: you can use logical subsetting for
#these operations (no need to use programming structures that we haven’t covered yet).
ai['minute'] = ai$period*12 - ai$minutes_remaining
dg['minute'] = dg$period*12 - dg$minutes_remaining
kd['minute'] = kd$period*12 - kd$minutes_remaining
kt['minute'] = kt$period*12 - kt$minutes_remaining
sc['minute'] = sc$period*12 - sc$minutes_remaining
# Use sink() to send the summary() output of each imported data frame into individuals
#text files: andre-iguodala-summary.txt, draymond-green-summary.txt, etc. During
#each sinking operation, the produced summaries should be sent to the output/folder
#using relative paths.
sink(file = "output/andre-iguodala-summary.txt")
summary(ai)
sink()
sink(file = "output/draymond-green-summary.txt")
summary(dg)
sink()
sink(file = "output/kevin-durant-summary.txt")
summary(kd)
sink()
sink(file = "output/klay-thompson-summary.txt")
summary(kt)
sink()
sink(file = "output/stephen-curry-summary.txt")
summary(sc)
sink()
# Use the row binding function rbind() to stack the tables into one single data frame
#(or tibble object).
shots_data = rbind(ai,dg,kd,kt,sc)
# Export (i.e. write) the assembled table as a CSV file shots-data.csv inside the folder
# data/. Use a relative path for this operation.
sink(file = "data/shots-data.csv")
shots_data
sink()
# Use sink() to send the summary() output of the assembled table. Send this output to
# a text file named shots-data-summary.txt inside the output/ folder. Use a relative
# path when exporting the R output.
sink(file="output/shots-data-summary.txt")
summary(shots_data)
sink()
?write.csv()
write(shots_data, file="data/shots-data.csv")
write.csv(shots_data, file="data/shots-data.csv")
################################
## title: make shots data
## description: use five data sets to make shots data
## inputs: andre-iguodala.csv,draymond-green.csv,kevin-durant.csv,klay-thompson.csvstephen-curry.csv
## outputs: andre-iguodala-summary.txt,draymond-green-summary.txt,kevin-durant-summary.txt,klay-thompson-summary.txt,stephen-curry-summary.txt,shots-data.csv,shots-data-summary.txt
################################
setwd("~/Desktop/STAT133CompWithData/workout/workout01/")
# Read in the five data sets, using relative file paths; the decision of
#the data types for each column is up to you.
ai <- read.csv("data/andre-iguodala.csv", stringsAsFactors = FALSE)
dg <- read.csv("data/draymond-green.csv", stringsAsFactors = FALSE)
kd <- read.csv("data/kevin-durant.csv", stringsAsFactors = FALSE)
kt <- read.csv("data/klay-thompson.csv", stringsAsFactors = FALSE)
sc <- read.csv("data/stephen-curry.csv", stringsAsFactors = FALSE)
# Add a column name to each imported data frame, that contains the name of
#the corresponding player
ai['name'] = 'Andre Iguodala'
dg['name'] = 'Draymond Green'
kd['name'] = 'Kevin Durant'
kt['name'] = 'Klay Thompson'
sc['name'] = 'Stephen Curry'
# Change the original values of shot_made_flag to more descriptive values:
#replace "n" with "shot_no", and "y" with "shot_yes". Hint: you can use
#logical subsetting for this operation (no need to use programming structures
#that we haven’t covered yet).
ai$shot_made_flag[ai$shot_made_flag == "n"] = "shot_no"
ai$shot_made_flag[ai$shot_made_flag == "y"] = "shot_yes"
dg$shot_made_flag[dg$shot_made_flag == "n"] = "shot_no"
dg$shot_made_flag[dg$shot_made_flag == "y"] = "shot_yes"
kd$shot_made_flag[kd$shot_made_flag == "n"] = "shot_no"
kd$shot_made_flag[kd$shot_made_flag == "y"] = "shot_yes"
kt$shot_made_flag[kt$shot_made_flag == "n"] = "shot_no"
kt$shot_made_flag[kt$shot_made_flag == "y"] = "shot_yes"
sc$shot_made_flag[sc$shot_made_flag == "n"] = "shot_no"
sc$shot_made_flag[sc$shot_made_flag == "y"] = "shot_yes"
# Add a column minute that contains the minute number where a shot occurred. For instance, if
#a shot took place during period = 1 and minutes_remaining = 8, then this should correspond to
#a value minute = 4. Likewise, if a shot took place during period = 4 and minutes_remaining = 2
#then this should correspond to a value minute = 46. Hint: you can use logical subsetting for
#these operations (no need to use programming structures that we haven’t covered yet).
ai['minute'] = ai$period*12 - ai$minutes_remaining
dg['minute'] = dg$period*12 - dg$minutes_remaining
kd['minute'] = kd$period*12 - kd$minutes_remaining
kt['minute'] = kt$period*12 - kt$minutes_remaining
sc['minute'] = sc$period*12 - sc$minutes_remaining
# Use sink() to send the summary() output of each imported data frame into individuals
#text files: andre-iguodala-summary.txt, draymond-green-summary.txt, etc. During
#each sinking operation, the produced summaries should be sent to the output/folder
#using relative paths.
sink(file = "output/andre-iguodala-summary.txt")
summary(ai)
sink()
sink(file = "output/draymond-green-summary.txt")
summary(dg)
sink()
sink(file = "output/kevin-durant-summary.txt")
summary(kd)
sink()
sink(file = "output/klay-thompson-summary.txt")
summary(kt)
sink()
sink(file = "output/stephen-curry-summary.txt")
summary(sc)
sink()
# Use the row binding function rbind() to stack the tables into one single data frame
#(or tibble object).
shots_data = rbind(ai,dg,kd,kt,sc)
# Export (i.e. write) the assembled table as a CSV file shots-data.csv inside the folder
# data/. Use a relative path for this operation.
write.csv(shots_data, file="data/shots-data.csv")
# Use sink() to send the summary() output of the assembled table. Send this output to
# a text file named shots-data-summary.txt inside the output/ folder. Use a relative
# path when exporting the R output.
sink(file="output/shots-data-summary.txt")
summary(shots_data)
sink()
################################
## title: make shot charts
## description:
## inputs:
## outputs:
################################
library(ggplot2)
ai <- read.csv("data/andre-iguodala.csv", stringsAsFactors = FALSE)
dg <- read.csv("data/draymond-green.csv", stringsAsFactors = FALSE)
kd <- read.csv("data/kevin-durant.csv", stringsAsFactors = FALSE)
kt <- read.csv("data/klay-thompson.csv", stringsAsFactors = FALSE)
sc <- read.csv("data/stephen-curry.csv", stringsAsFactors = FALSE)
# scatterplot
klay_scatterplot <- ggplot(data = kt) +
geom_point(aes(x = x, y = y, color = shot_made_flag))
library(jpeg)
library(grid)
# court image (to be used as background of plot)
court_file <- "images/nba-court.jpg"
# create raste object
court_image <- rasterGrob(
readJPEG(court_file),
width = unit(1, "npc"),
height = unit(1, "npc"))
# shot chart with court background
klay_shot_chart <- ggplot(data = kt) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Klay Thompson (2016 season)') +
theme_minimal()
# 4.1) Shot charts of each player
# andre-iguodala-shot-chart.pdf
pdf(file = "images/andre-iguodala-shot-chart.pdf",width=6.5,height = 5)
ggplot(data = ai) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Andre Iguodala (2016 season)') +
theme_minimal()
dev.off()
# draymond-green-shot-chart.pdf
pdf(file = "images/draymond-green-shot-chart.pdf",width=6.5,height = 5)
ggplot(data = dg) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Draymond Green (2016 season)') +
theme_minimal()
dev.off()
# kevin-durant-shot-chart.pdf
pdf(file = "images/kevin-durant-shot-chart.pdf",width=6.5,height = 5)
ggplot(data = kd) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Kevin Durant (2016 season)') +
theme_minimal()
dev.off()
# klay-thompson-shot-chart.pdf
pdf(file = "images/klay-thompson-shot-chart.pdf",width=6.5,height = 5)
ggplot(data = kt) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Klay Thompson (2016 season)') +
theme_minimal()
dev.off()
# stephen-curry-shot-chart.pdf
pdf(file = "images/stephen-curry-shot-chart.pdf",width=6.5,height = 5)
ggplot(data = sc) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Stephen Curry (2016 season)') +
theme_minimal()
dev.off()
# 4.2) Facetted Shot Chart
pdf(file = "images/gsw-shot-charts.pdf",width = 8,height = 7)
ggplot(data = shots_data) +
facet_wrap(~ name) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Shots Data (2016 season)') +
theme_minimal()
dev.off()
png(filename = "images/gsw-shot-charts.png",width = 8,height = 7,units = "in",res = 200)
ggplot(data = shots_data) +
facet_wrap(~ name) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Shots Data (2016 season)') +
theme_minimal()
dev.off()
library(dplyr)
shots_data <- read.csv("../data/shots-data.csv", stringsAsFactors = FALSE)
# 2PT Effective Shooting % by Player:
shots_data[shots_data$shot_type=="2PT Field Goal",] %>%
group_by(name) %>%
summarise(total = n(),
made = sum(shot_made_flag=="shot_yes")) %>%
mutate(perc_made = made/total) %>%
arrange(desc(perc_made))
# 3PT Effective Shooting % by Player:
shots_data[shots_data$shot_type=="3PT Field Goal",] %>%
group_by(name) %>%
summarise(total = n(),
made = sum(shot_made_flag=="shot_yes")) %>%
mutate(perc_made = made/total) %>%
arrange(desc(perc_made))
# Effective Shooting % by Player:
shots_data %>%
group_by(name) %>%
summarise(total = n(),
made = sum(shot_made_flag=="shot_yes")) %>%
mutate(perc_made = made/total) %>%
arrange(desc(perc_made))
shots_data %>%
group_by(name) %>%
summarise(total = n(),
made = sum(shot_made_flag=="shot_yes")) %>%
mutate(perc_made = made/total) %>%
t1=arrange(desc(perc_made))
library(dplyr)
shots_data <- read.csv("../data/shots-data.csv", stringsAsFactors = FALSE)
# 2PT Effective Shooting % by Player:
shots_data[shots_data$shot_type=="2PT Field Goal",] %>%
group_by(name) %>%
summarise(total = n(),
made = sum(shot_made_flag=="shot_yes")) %>%
mutate(perc_made = made/total) %>%
arrange(desc(perc_made))
# 3PT Effective Shooting % by Player:
shots_data[shots_data$shot_type=="3PT Field Goal",] %>%
group_by(name) %>%
summarise(total = n(),
made = sum(shot_made_flag=="shot_yes")) %>%
mutate(perc_made = made/total) %>%
arrange(desc(perc_made))
# Effective Shooting % by Player:
shots_data %>%
group_by(name) %>%
summarise(total = n(),
made = sum(shot_made_flag=="shot_yes")) %>%
mutate(perc_made = made/total) %>%
arrange(desc(perc_made))
shots_data %>%
group_by(name) %>%
summarise(total = n(),
made = sum(shot_made_flag=="shot_yes")) %>%
mutate(perc_made = made/total) %>%
arrange(desc(perc_made)) %>%
display()
library(dplyr)
shots_data <- read.csv("../data/shots-data.csv", stringsAsFactors = FALSE)
# 2PT Effective Shooting % by Player:
shots_data[shots_data$shot_type=="2PT Field Goal",] %>%
group_by(name) %>%
summarise(total = n(),
made = sum(shot_made_flag=="shot_yes")) %>%
mutate(perc_made = made/total) %>%
arrange(desc(perc_made))
# 3PT Effective Shooting % by Player:
shots_data[shots_data$shot_type=="3PT Field Goal",] %>%
group_by(name) %>%
summarise(total = n(),
made = sum(shot_made_flag=="shot_yes")) %>%
mutate(perc_made = made/total) %>%
arrange(desc(perc_made))
# Effective Shooting % by Player:
shots_data %>%
group_by(name) %>%
summarise(total = n(),
made = sum(shot_made_flag=="shot_yes")) %>%
mutate(perc_made = made/total) %>%
arrange(desc(perc_made))
View(shots_data)
View(shots_data)
